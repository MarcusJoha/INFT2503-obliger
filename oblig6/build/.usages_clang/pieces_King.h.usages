22 serialization::archive 19 0 0 0 0 67 /Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6 73 /Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/build 0 0 88 0 0 0 1 # 1 1 1 2 18446744073709551615 6 pragma 1 2 1 8 18446744073709551615 4 once 1 9 1 13 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 11 "Piece.hpp" 2 10 2 21 18446744073709551615 5 using 4 1 4 6 18446744073709551615 9 namespace 4 7 4 16 18446744073709551615 3 std 4 17 4 20 0 1 ; 4 20 4 21 18446744073709551615 1 # 6 1 6 2 18446744073709551615 6 ifndef 6 2 6 8 18446744073709551615 8 KING_HPP 6 9 6 17 18446744073709551615 1 # 7 1 7 2 18446744073709551615 6 define 7 2 7 8 18446744073709551615 8 KING_HPP 7 9 7 17 18446744073709551615 5 class 9 1 9 6 18446744073709551615 4 King 9 7 9 11 1 1 : 9 11 9 12 18446744073709551615 6 public 9 13 9 19 18446744073709551615 5 Piece 9 20 9 25 2 1 { 9 26 9 27 18446744073709551615 6 public 11 1 11 7 18446744073709551615 1 : 11 7 11 8 18446744073709551615 8 explicit 12 5 12 13 18446744073709551615 4 King 12 14 12 18 1 1 ( 12 18 12 19 1 5 Color 12 19 12 24 3 5 color 12 25 12 30 4 1 ) 12 30 12 31 1 1 : 12 31 12 32 1 5 Piece 12 33 12 38 2 1 ( 12 38 12 39 2 5 color 12 39 12 44 4 1 ) 12 44 12 45 2 1 { 12 46 12 47 18446744073709551615 1 } 12 47 12 48 18446744073709551615 1 [ 13 5 13 6 18446744073709551615 1 [ 13 6 13 7 18446744073709551615 9 nodiscard 13 7 13 16 1 1 ] 13 16 13 17 18446744073709551615 1 ] 13 17 13 18 18446744073709551615 6 string 13 19 13 25 5 4 type 13 26 13 30 6 1 ( 13 30 13 31 6 1 ) 13 31 13 32 6 5 const 13 33 13 38 18446744073709551615 8 override 13 39 13 47 18446744073709551615 1 ; 13 47 13 48 18446744073709551615 1 [ 14 5 14 6 18446744073709551615 1 [ 14 6 14 7 18446744073709551615 9 nodiscard 14 7 14 16 1 1 ] 14 16 14 17 18446744073709551615 1 ] 14 17 14 18 18446744073709551615 4 bool 14 19 14 23 18446744073709551615 10 valid_move 14 24 14 34 7 1 ( 14 34 14 35 7 3 int 14 35 14 38 18446744073709551615 6 from_x 14 39 14 45 8 1 , 14 45 14 46 7 3 int 14 47 14 50 18446744073709551615 6 from_y 14 51 14 57 9 1 , 14 57 14 58 7 3 int 14 59 14 62 18446744073709551615 4 to_x 14 63 14 67 10 1 , 14 67 14 68 7 3 int 14 69 14 72 18446744073709551615 4 to_y 14 73 14 77 11 1 ) 14 78 14 79 7 5 const 14 80 14 85 18446744073709551615 8 override 14 86 14 94 18446744073709551615 1 ; 14 94 14 95 18446744073709551615 1 [ 15 5 15 6 18446744073709551615 1 [ 15 6 15 7 18446744073709551615 9 nodiscard 15 7 15 16 1 1 ] 15 16 15 17 18446744073709551615 1 ] 15 17 15 18 18446744073709551615 6 string 15 19 15 25 5 6 symbol 15 26 15 32 12 1 ( 15 32 15 33 12 1 ) 15 33 15 34 12 5 const 15 35 15 40 18446744073709551615 8 override 15 41 15 49 18446744073709551615 1 ; 15 49 15 50 18446744073709551615 1 } 17 1 17 2 18446744073709551615 1 ; 17 2 17 3 18446744073709551615 1 # 19 1 19 2 18446744073709551615 5 endif 19 2 19 7 18446744073709551615 0 0 13 0 0 0 22 0 0 1 2 0 3 std 4 1 2 0 4 King 4 1 2 0 5 Piece 5 1 2 0 11 Color:Piece 10 1 2 0 87 12:25:/Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 20 1 2 0 14 string:__1:std 21 2 2 0 9 type:King 10 type:Piece 21 2 2 0 15 valid_move:King 16 valid_move:Piece 10 1 2 0 87 14:39:/Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 10 1 2 0 87 14:51:/Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 10 1 2 0 87 14:63:/Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 10 1 2 0 87 14:73:/Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 21 2 2 0 11 symbol:King 12 symbol:Piece 0 0 1 0 0 0 81 /Users/marcusjohannessen/Desktop/NTNU/Høst 2022/C++/Obliger/oblig6/pieces/King.h 1665079319